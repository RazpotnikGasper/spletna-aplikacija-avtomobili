{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Uporabnik\\\\spletna-aplikacija-avtomobili\\\\client\\\\src\\\\container\\\\CarManagement.js\",\n  _s = $RefreshSig$();\n// CarManagement.js\nimport React, { useState, useEffect } from 'react';\nimport Home from '../pages/Home';\nimport TabelaCars from '../components/tabelaCars';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction CarManagement() {\n  _s();\n  const [filterType, setFilterType] = useState(\"\");\n  const [filterName, setFilterName] = useState(\"\");\n  const [carsFiltered, setCarsFiltered] = useState([]);\n  const handleFilterTypeChange = value => {\n    setFilterType(value);\n  };\n  const handleFilterNameChange = value => {\n    setFilterName(value);\n  };\n  useEffect(() => {\n    console.log('Filter Type:', filterType);\n    console.log('Filter Name:', filterName);\n    console.log('All Cars:', cars);\n    setCarsFiltered(cars.filter(car => {\n      if (filterType && car.type !== filterType) {\n        return false;\n      }\n      if (filterName && car.name !== filterName) {\n        return false;\n      }\n      return true;\n    }));\n  }, [filterType, filterName, cars]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(TabelaCars, {\n      filterType: filterType,\n      filterName: filterName,\n      handleFilterTypeChange: handleFilterTypeChange,\n      handleFilterNameChange: handleFilterNameChange,\n      carsFiltered: carsFiltered || [] // Ensure it's not undefined\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(CarManagement, \"PASeIiOuW1gL8W5tiZBU+NIlL2c=\");\n_c = CarManagement;\nexport default CarManagement;\nvar _c;\n$RefreshReg$(_c, \"CarManagement\");","map":{"version":3,"names":["React","useState","useEffect","Home","TabelaCars","jsxDEV","_jsxDEV","Fragment","_Fragment","CarManagement","_s","filterType","setFilterType","filterName","setFilterName","carsFiltered","setCarsFiltered","handleFilterTypeChange","value","handleFilterNameChange","console","log","cars","filter","car","type","name","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Uporabnik/spletna-aplikacija-avtomobili/client/src/container/CarManagement.js"],"sourcesContent":["// CarManagement.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport Home from '../pages/Home';\r\nimport TabelaCars from '../components/tabelaCars';\r\n\r\nfunction CarManagement() {\r\n  const [filterType, setFilterType] = useState(\"\");\r\n  const [filterName, setFilterName] = useState(\"\");\r\n  const [carsFiltered, setCarsFiltered] = useState([]);\r\n\r\n  const handleFilterTypeChange = (value) => {\r\n    setFilterType(value);\r\n  };\r\n\r\n  const handleFilterNameChange = (value) => {\r\n    setFilterName(value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log('Filter Type:', filterType);\r\n    console.log('Filter Name:', filterName);\r\n    console.log('All Cars:', cars);\r\n  \r\n    setCarsFiltered(\r\n      cars.filter((car) => {\r\n        if (filterType && car.type !== filterType) {\r\n          return false;\r\n        }\r\n        if (filterName && car.name !== filterName) {\r\n          return false;\r\n        }\r\n        return true;\r\n      })\r\n    );\r\n  }, [filterType, filterName, cars]);\r\n  \r\n  return (\r\n    <>\r\n      <TabelaCars\r\n        filterType={filterType}\r\n        filterName={filterName}\r\n        handleFilterTypeChange={handleFilterTypeChange}\r\n        handleFilterNameChange={handleFilterNameChange}\r\n        carsFiltered={carsFiltered || []} // Ensure it's not undefined\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default CarManagement;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,IAAI,MAAM,eAAe;AAChC,OAAOC,UAAU,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAElD,SAASC,aAAaA,CAAA,EAAG;EAAAC,EAAA;EACvB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACY,UAAU,EAAEC,aAAa,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACc,YAAY,EAAEC,eAAe,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAEpD,MAAMgB,sBAAsB,GAAIC,KAAK,IAAK;IACxCN,aAAa,CAACM,KAAK,CAAC;EACtB,CAAC;EAED,MAAMC,sBAAsB,GAAID,KAAK,IAAK;IACxCJ,aAAa,CAACI,KAAK,CAAC;EACtB,CAAC;EAEDhB,SAAS,CAAC,MAAM;IACdkB,OAAO,CAACC,GAAG,CAAC,cAAc,EAAEV,UAAU,CAAC;IACvCS,OAAO,CAACC,GAAG,CAAC,cAAc,EAAER,UAAU,CAAC;IACvCO,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEC,IAAI,CAAC;IAE9BN,eAAe,CACbM,IAAI,CAACC,MAAM,CAAEC,GAAG,IAAK;MACnB,IAAIb,UAAU,IAAIa,GAAG,CAACC,IAAI,KAAKd,UAAU,EAAE;QACzC,OAAO,KAAK;MACd;MACA,IAAIE,UAAU,IAAIW,GAAG,CAACE,IAAI,KAAKb,UAAU,EAAE;QACzC,OAAO,KAAK;MACd;MACA,OAAO,IAAI;IACb,CAAC,CACH,CAAC;EACH,CAAC,EAAE,CAACF,UAAU,EAAEE,UAAU,EAAES,IAAI,CAAC,CAAC;EAElC,oBACEhB,OAAA,CAAAE,SAAA;IAAAmB,QAAA,eACErB,OAAA,CAACF,UAAU;MACTO,UAAU,EAAEA,UAAW;MACvBE,UAAU,EAAEA,UAAW;MACvBI,sBAAsB,EAAEA,sBAAuB;MAC/CE,sBAAsB,EAAEA,sBAAuB;MAC/CJ,YAAY,EAAEA,YAAY,IAAI,EAAG,CAAC;IAAA;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnC;EAAC,gBACF,CAAC;AAEP;AAACrB,EAAA,CA1CQD,aAAa;AAAAuB,EAAA,GAAbvB,aAAa;AA4CtB,eAAeA,aAAa;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}