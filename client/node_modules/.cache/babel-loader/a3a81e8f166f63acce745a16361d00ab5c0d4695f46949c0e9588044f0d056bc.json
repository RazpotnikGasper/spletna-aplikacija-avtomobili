{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Uporabnik\\\\spletna-aplikacija-avtomobili\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CarList = () => {\n  _s();\n  const [cars, setCars] = useState([]);\n  const [newCar, setNewCar] = useState({\n    name: \"\",\n    model: \"\",\n    type: \"\"\n  });\n  useEffect(() => {\n    // Fetch the list of cars from the Flask API\n    fetch(\"http://localhost:5000/\").then(response => response.json()).then(data => setCars(data)).catch(error => console.error('Error fetching data:', error));\n  }, []);\n  const handleUpdate = (carId, updatedCar) => {\n    // Update the car on the Flask API\n    fetch(`http://localhost:5000/cars/${carId}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(updatedCar)\n    }).then(response => response.json()).then(data => console.log(data)).catch(error => console.error('Error updating car:', error));\n  };\n  const handleDelete = carId => {\n    // Delete the car on the Flask API\n    fetch(`http://localhost:5000/cars/${carId}`, {\n      method: 'DELETE'\n    }).then(response => response.json()).then(data => console.log(data)).catch(error => console.error('Error deleting car:', error));\n\n    // Update the local state to reflect the deleted car\n    setCars(prevCars => prevCars.filter(car => car.id !== carId));\n  };\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setNewCar(prevCar => ({\n      ...prevCar,\n      [name]: value\n    }));\n  };\n  const handleAddCar = () => {\n    // Add a new car to the Flask API\n    fetch(\"http://localhost:5000/cars\", {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(newCar)\n    }).then(response => response.json()).then(data => {\n      console.log(data);\n      // Refresh the list of cars after adding a new one\n      fetch(\"http://localhost:5000/\").then(response => response.json()).then(data => setCars(data)).catch(error => console.error('Error fetching data:', error));\n    }).catch(error => console.error('Error adding car:', error));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Car List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: cars.map(car => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [`${car.name} - ${car.model} - ${car.type}`, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleUpdate(car.id, {\n            name: \"UpdatedName\",\n            model: \"UpdatedModel\",\n            type: \"UpdatedType\"\n          }),\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDelete(car.id),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this)]\n      }, car.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Add a new car:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"name\",\n        value: newCar.name,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Model:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"model\",\n        value: newCar.model,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Type:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"type\",\n        value: newCar.type,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAddCar,\n      children: \"Add Car\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n_s(CarList, \"5t7LAqTd+yoCxxMkMDtXCDm5AC0=\");\n_c = CarList;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"CarList\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","CarList","_s","cars","setCars","newCar","setNewCar","name","model","type","fetch","then","response","json","data","catch","error","console","handleUpdate","carId","updatedCar","method","headers","body","JSON","stringify","log","handleDelete","prevCars","filter","car","id","handleInputChange","e","value","target","prevCar","handleAddCar","children","fileName","_jsxFileName","lineNumber","columnNumber","map","onClick","onChange","_c","App","$RefreshReg$"],"sources":["C:/Users/Uporabnik/spletna-aplikacija-avtomobili/client/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nconst CarList = () => {\n  const [cars, setCars] = useState([]);\n  const [newCar, setNewCar] = useState({ name: \"\", model: \"\", type: \"\" });\n\n  useEffect(() => {\n    // Fetch the list of cars from the Flask API\n    fetch(\"http://localhost:5000/\")\n      .then(response => response.json())\n      .then(data => setCars(data))\n      .catch(error => console.error('Error fetching data:', error));\n  }, []);\n\n  const handleUpdate = (carId, updatedCar) => {\n    // Update the car on the Flask API\n    fetch(`http://localhost:5000/cars/${carId}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(updatedCar),\n    })\n    .then(response => response.json())\n    .then(data => console.log(data))\n    .catch(error => console.error('Error updating car:', error));\n  };\n\n  const handleDelete = (carId) => {\n    // Delete the car on the Flask API\n    fetch(`http://localhost:5000/cars/${carId}`, {\n      method: 'DELETE',\n    })\n    .then(response => response.json())\n    .then(data => console.log(data))\n    .catch(error => console.error('Error deleting car:', error));\n\n    // Update the local state to reflect the deleted car\n    setCars(prevCars => prevCars.filter(car => car.id !== carId));\n  };\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setNewCar(prevCar => ({ ...prevCar, [name]: value }));\n  };\n\n  const handleAddCar = () => {\n    // Add a new car to the Flask API\n    fetch(\"http://localhost:5000/cars\", {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(newCar),\n    })\n    .then(response => response.json())\n    .then(data => {\n      console.log(data);\n      // Refresh the list of cars after adding a new one\n      fetch(\"http://localhost:5000/\")\n        .then(response => response.json())\n        .then(data => setCars(data))\n        .catch(error => console.error('Error fetching data:', error));\n    })\n    .catch(error => console.error('Error adding car:', error));\n  };\n\n  return (\n    <div>\n      <h1>Car List</h1>\n      <ul>\n        {cars.map((car) => (\n          <li key={car.id}>\n            {`${car.name} - ${car.model} - ${car.type}`}\n            <button onClick={() => handleUpdate(car.id, { name: \"UpdatedName\", model: \"UpdatedModel\", type: \"UpdatedType\" })}>\n              Update\n            </button>\n            <button onClick={() => handleDelete(car.id)}>\n              Delete\n            </button>\n          </li>\n        ))}\n      </ul>\n      <h2>Add a new car:</h2>\n      <label>\n        Name:\n        <input type=\"text\" name=\"name\" value={newCar.name} onChange={handleInputChange} />\n      </label>\n      <label>\n        Model:\n        <input type=\"text\" name=\"model\" value={newCar.model} onChange={handleInputChange} />\n      </label>\n      <label>\n        Type:\n        <input type=\"text\" name=\"type\" value={newCar.type} onChange={handleInputChange} />\n      </label>\n      <button onClick={handleAddCar}>\n        Add Car\n      </button>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACQ,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC;IAAEU,IAAI,EAAE,EAAE;IAAEC,KAAK,EAAE,EAAE;IAAEC,IAAI,EAAE;EAAG,CAAC,CAAC;EAEvEX,SAAS,CAAC,MAAM;IACd;IACAY,KAAK,CAAC,wBAAwB,CAAC,CAC5BC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAIV,OAAO,CAACU,IAAI,CAAC,CAAC,CAC3BC,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC,CAAC;EACjE,CAAC,EAAE,EAAE,CAAC;EAEN,MAAME,YAAY,GAAGA,CAACC,KAAK,EAAEC,UAAU,KAAK;IAC1C;IACAV,KAAK,CAAE,8BAA6BS,KAAM,EAAC,EAAE;MAC3CE,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACL,UAAU;IACjC,CAAC,CAAC,CACDT,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAIG,OAAO,CAACS,GAAG,CAACZ,IAAI,CAAC,CAAC,CAC/BC,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC,CAAC;EAC9D,CAAC;EAED,MAAMW,YAAY,GAAIR,KAAK,IAAK;IAC9B;IACAT,KAAK,CAAE,8BAA6BS,KAAM,EAAC,EAAE;MAC3CE,MAAM,EAAE;IACV,CAAC,CAAC,CACDV,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAIG,OAAO,CAACS,GAAG,CAACZ,IAAI,CAAC,CAAC,CAC/BC,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC,CAAC;;IAE5D;IACAZ,OAAO,CAACwB,QAAQ,IAAIA,QAAQ,CAACC,MAAM,CAACC,GAAG,IAAIA,GAAG,CAACC,EAAE,KAAKZ,KAAK,CAAC,CAAC;EAC/D,CAAC;EAED,MAAMa,iBAAiB,GAAIC,CAAC,IAAK;IAC/B,MAAM;MAAE1B,IAAI;MAAE2B;IAAM,CAAC,GAAGD,CAAC,CAACE,MAAM;IAChC7B,SAAS,CAAC8B,OAAO,KAAK;MAAE,GAAGA,OAAO;MAAE,CAAC7B,IAAI,GAAG2B;IAAM,CAAC,CAAC,CAAC;EACvD,CAAC;EAED,MAAMG,YAAY,GAAGA,CAAA,KAAM;IACzB;IACA3B,KAAK,CAAC,4BAA4B,EAAE;MAClCW,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACpB,MAAM;IAC7B,CAAC,CAAC,CACDM,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAI;MACZG,OAAO,CAACS,GAAG,CAACZ,IAAI,CAAC;MACjB;MACAJ,KAAK,CAAC,wBAAwB,CAAC,CAC5BC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAIV,OAAO,CAACU,IAAI,CAAC,CAAC,CAC3BC,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC,CAAC;IACjE,CAAC,CAAC,CACDD,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,mBAAmB,EAAEA,KAAK,CAAC,CAAC;EAC5D,CAAC;EAED,oBACEhB,OAAA;IAAAsC,QAAA,gBACEtC,OAAA;MAAAsC,QAAA,EAAI;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjB1C,OAAA;MAAAsC,QAAA,EACGnC,IAAI,CAACwC,GAAG,CAAEb,GAAG,iBACZ9B,OAAA;QAAAsC,QAAA,GACI,GAAER,GAAG,CAACvB,IAAK,MAAKuB,GAAG,CAACtB,KAAM,MAAKsB,GAAG,CAACrB,IAAK,EAAC,eAC3CT,OAAA;UAAQ4C,OAAO,EAAEA,CAAA,KAAM1B,YAAY,CAACY,GAAG,CAACC,EAAE,EAAE;YAAExB,IAAI,EAAE,aAAa;YAAEC,KAAK,EAAE,cAAc;YAAEC,IAAI,EAAE;UAAc,CAAC,CAAE;UAAA6B,QAAA,EAAC;QAElH;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACT1C,OAAA;UAAQ4C,OAAO,EAAEA,CAAA,KAAMjB,YAAY,CAACG,GAAG,CAACC,EAAE,CAAE;UAAAO,QAAA,EAAC;QAE7C;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA,GAPFZ,GAAG,CAACC,EAAE;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAQX,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,eACL1C,OAAA;MAAAsC,QAAA,EAAI;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACvB1C,OAAA;MAAAsC,QAAA,GAAO,OAEL,eAAAtC,OAAA;QAAOS,IAAI,EAAC,MAAM;QAACF,IAAI,EAAC,MAAM;QAAC2B,KAAK,EAAE7B,MAAM,CAACE,IAAK;QAACsC,QAAQ,EAAEb;MAAkB;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7E,CAAC,eACR1C,OAAA;MAAAsC,QAAA,GAAO,QAEL,eAAAtC,OAAA;QAAOS,IAAI,EAAC,MAAM;QAACF,IAAI,EAAC,OAAO;QAAC2B,KAAK,EAAE7B,MAAM,CAACG,KAAM;QAACqC,QAAQ,EAAEb;MAAkB;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/E,CAAC,eACR1C,OAAA;MAAAsC,QAAA,GAAO,OAEL,eAAAtC,OAAA;QAAOS,IAAI,EAAC,MAAM;QAACF,IAAI,EAAC,MAAM;QAAC2B,KAAK,EAAE7B,MAAM,CAACI,IAAK;QAACoC,QAAQ,EAAEb;MAAkB;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7E,CAAC,eACR1C,OAAA;MAAQ4C,OAAO,EAAEP,YAAa;MAAAC,QAAA,EAAC;IAE/B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV,CAAC;AAACxC,EAAA,CAnGID,OAAO;AAAA6C,EAAA,GAAP7C,OAAO;AAqGb,eAAe8C,GAAG;AAAC,IAAAD,EAAA;AAAAE,YAAA,CAAAF,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}