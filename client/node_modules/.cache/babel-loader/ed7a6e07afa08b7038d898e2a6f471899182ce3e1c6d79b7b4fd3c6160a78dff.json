{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Uporabnik\\\\spletna-aplikacija-avtomobili\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport \"./App.css\";\nimport TaskForm from \"./TaskForm\";\nimport Task from \"./Task\";\nimport { useEffect, useState } from \"react\";\nimport Car from \"./Car\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [cars, setCars] = useState([]);\n  /*  useEffect(() => {\n    if (tasks.length === 0) return;\n    localStorage.setItem(\"tasks\", JSON.stringify(tasks));\n  }, [tasks]);\n  useEffect(() => {\n    const tasks = JSON.parse(localStorage.getItem(\"tasks\"));\n    setTasks(tasks);\n  }, []); */\n  useEffect(() => {\n    fetch(\"http://127.0.0.1:5000/\").then(res => res.json()).then(data => setCars(data)).catch(error => console.error(\"Error:\", error));\n  }, []);\n  function addTask(name) {\n    setTasks(prev => {\n      return [...prev, {\n        name: name,\n        done: false\n      }];\n    });\n  }\n  function updateTaskDone(taskIndex, newDone) {\n    setTasks(prev => {\n      if (!Array.isArray(prev) || taskIndex < 0 || taskIndex >= prev.length) {\n        // Handle invalid taskIndex or non-array case\n        console.error(\"Invalid taskIndex or non-array\");\n        return prev;\n      }\n      const newTasks = [...prev];\n      const taskToUpdate = newTasks[taskIndex];\n      if (taskToUpdate) {\n        // Check if the task is defined before updating 'done'\n        taskToUpdate.done = newDone;\n      } else {\n        console.error(\"Task at taskIndex is undefined\");\n      }\n      return newTasks;\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(TaskForm, {\n      onAdd: addTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), tasks.map((task, index) => /*#__PURE__*/_jsxDEV(Task, {\n      ...task,\n      onToggle: done => updateTaskDone(index, done)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this)), cars && cars.map((car, index) => /*#__PURE__*/_jsxDEV(Car, {\n      car: car\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 41\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"DqWM+gdXakztPSuiEkEoQcNUME0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["TaskForm","Task","useEffect","useState","Car","jsxDEV","_jsxDEV","App","_s","tasks","setTasks","cars","setCars","fetch","then","res","json","data","catch","error","console","addTask","name","prev","done","updateTaskDone","taskIndex","newDone","Array","isArray","length","newTasks","taskToUpdate","children","onAdd","fileName","_jsxFileName","lineNumber","columnNumber","map","task","index","onToggle","car","_c","$RefreshReg$"],"sources":["C:/Users/Uporabnik/spletna-aplikacija-avtomobili/client/src/App.js"],"sourcesContent":["import \"./App.css\";\nimport TaskForm from \"./TaskForm\";\nimport Task from \"./Task\";\nimport { useEffect, useState } from \"react\";\nimport Car from \"./Car\";\nfunction App() {\n  const [tasks, setTasks] = useState([]);\n  const [cars, setCars] = useState([]);\n  /*  useEffect(() => {\n    if (tasks.length === 0) return;\n    localStorage.setItem(\"tasks\", JSON.stringify(tasks));\n  }, [tasks]);\n  useEffect(() => {\n    const tasks = JSON.parse(localStorage.getItem(\"tasks\"));\n    setTasks(tasks);\n  }, []); */\n  useEffect(() => {\n    fetch(\"http://127.0.0.1:5000/\")\n      .then((res) => res.json())\n      .then((data) => setCars(data))\n      .catch((error) => console.error(\"Error:\", error));\n  }, []);\n\n  function addTask(name) {\n    setTasks((prev) => {\n      return [...prev, { name: name, done: false }];\n    });\n  }\n  function updateTaskDone(taskIndex, newDone) {\n    setTasks((prev) => {\n      if (!Array.isArray(prev) || taskIndex < 0 || taskIndex >= prev.length) {\n        // Handle invalid taskIndex or non-array case\n        console.error(\"Invalid taskIndex or non-array\");\n        return prev;\n      }\n\n      const newTasks = [...prev];\n      const taskToUpdate = newTasks[taskIndex];\n\n      if (taskToUpdate) {\n        // Check if the task is defined before updating 'done'\n        taskToUpdate.done = newDone;\n      } else {\n        console.error(\"Task at taskIndex is undefined\");\n      }\n\n      return newTasks;\n    });\n  }\n  return (\n    <main>\n      <TaskForm onAdd={addTask} />\n      {tasks.map((task, index) => (\n        <Task\n          key={index}\n          {...task}\n          onToggle={(done) => updateTaskDone(index, done)}\n        />\n      ))}\n\n      {cars && cars.map((car, index) => <Car key={index} car={car} />)}\n    </main>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}