{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Uporabnik\\\\spletna-aplikacija-avtomobili\\\\client\\\\src\\\\container\\\\CarManagement.js\",\n  _s = $RefreshSig$();\n// CarManagement.js\nimport React, { useState, useEffect } from 'react';\nimport Home from '../pages/Home';\nimport TabelaCars from '../components/tabelaCars';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction CarManagement() {\n  _s();\n  const [filterType, setFilterType] = useState(\"\");\n  const [filterName, setFilterName] = useState(\"\");\n  const [carsFiltered, setCarsFiltered] = useState([]);\n  const handleFilterTypeChange = value => {\n    setFilterType(value);\n  };\n  const handleFilterNameChange = value => {\n    setFilterName(value);\n  };\n  useEffect(() => {\n    // Fetch cars data from your API endpoint\n    fetch(\"http://127.0.0.1:5000/api/cars\") // Replace with your actual API endpoint\n    .then(res => res.json()).then(data => {\n      setCarsFiltered(data.filter(car => {\n        if (filterType && car.type !== filterType) {\n          return false;\n        }\n        if (filterName && car.name !== filterName) {\n          return false;\n        }\n        return true;\n      }));\n    }).catch(error => console.error(\"Error:\", error));\n  }, [filterType, filterName, cars]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(TabelaCars, {\n      filterType: filterType,\n      filterName: filterName,\n      handleFilterTypeChange: handleFilterTypeChange,\n      handleFilterNameChange: handleFilterNameChange,\n      carsFiltered: carsFiltered || [] // Ensure it's not undefined\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(CarManagement, \"PASeIiOuW1gL8W5tiZBU+NIlL2c=\");\n_c = CarManagement;\nexport default CarManagement;\nvar _c;\n$RefreshReg$(_c, \"CarManagement\");","map":{"version":3,"names":["React","useState","useEffect","Home","TabelaCars","jsxDEV","_jsxDEV","Fragment","_Fragment","CarManagement","_s","filterType","setFilterType","filterName","setFilterName","carsFiltered","setCarsFiltered","handleFilterTypeChange","value","handleFilterNameChange","fetch","then","res","json","data","filter","car","type","name","catch","error","console","cars","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Uporabnik/spletna-aplikacija-avtomobili/client/src/container/CarManagement.js"],"sourcesContent":["// CarManagement.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport Home from '../pages/Home';\r\nimport TabelaCars from '../components/tabelaCars';\r\n\r\nfunction CarManagement() {\r\n  const [filterType, setFilterType] = useState(\"\");\r\n  const [filterName, setFilterName] = useState(\"\");\r\n  const [carsFiltered, setCarsFiltered] = useState([]);\r\n\r\n  const handleFilterTypeChange = (value) => {\r\n    setFilterType(value);\r\n  };\r\n\r\n  const handleFilterNameChange = (value) => {\r\n    setFilterName(value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Fetch cars data from your API endpoint\r\n    fetch(\"http://127.0.0.1:5000/api/cars\")  // Replace with your actual API endpoint\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        setCarsFiltered(\r\n          data.filter((car) => {\r\n            if (filterType && car.type !== filterType) {\r\n              return false;\r\n            }\r\n            if (filterName && car.name !== filterName) {\r\n              return false;\r\n            }\r\n            return true;\r\n          })\r\n        );\r\n      })\r\n      .catch((error) => console.error(\"Error:\", error));\r\n  }, [filterType, filterName,cars]);\r\n\r\n  return (\r\n    <>\r\n      <TabelaCars\r\n        filterType={filterType}\r\n        filterName={filterName}\r\n        handleFilterTypeChange={handleFilterTypeChange}\r\n        handleFilterNameChange={handleFilterNameChange}\r\n        carsFiltered={carsFiltered || []} // Ensure it's not undefined\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default CarManagement;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,IAAI,MAAM,eAAe;AAChC,OAAOC,UAAU,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAElD,SAASC,aAAaA,CAAA,EAAG;EAAAC,EAAA;EACvB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACY,UAAU,EAAEC,aAAa,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACc,YAAY,EAAEC,eAAe,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAEpD,MAAMgB,sBAAsB,GAAIC,KAAK,IAAK;IACxCN,aAAa,CAACM,KAAK,CAAC;EACtB,CAAC;EAED,MAAMC,sBAAsB,GAAID,KAAK,IAAK;IACxCJ,aAAa,CAACI,KAAK,CAAC;EACtB,CAAC;EAEDhB,SAAS,CAAC,MAAM;IACd;IACAkB,KAAK,CAAC,gCAAgC,CAAC,CAAE;IAAA,CACtCC,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACzBF,IAAI,CAAEG,IAAI,IAAK;MACdR,eAAe,CACbQ,IAAI,CAACC,MAAM,CAAEC,GAAG,IAAK;QACnB,IAAIf,UAAU,IAAIe,GAAG,CAACC,IAAI,KAAKhB,UAAU,EAAE;UACzC,OAAO,KAAK;QACd;QACA,IAAIE,UAAU,IAAIa,GAAG,CAACE,IAAI,KAAKf,UAAU,EAAE;UACzC,OAAO,KAAK;QACd;QACA,OAAO,IAAI;MACb,CAAC,CACH,CAAC;IACH,CAAC,CAAC,CACDgB,KAAK,CAAEC,KAAK,IAAKC,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC,CAAC;EACrD,CAAC,EAAE,CAACnB,UAAU,EAAEE,UAAU,EAACmB,IAAI,CAAC,CAAC;EAEjC,oBACE1B,OAAA,CAAAE,SAAA;IAAAyB,QAAA,eACE3B,OAAA,CAACF,UAAU;MACTO,UAAU,EAAEA,UAAW;MACvBE,UAAU,EAAEA,UAAW;MACvBI,sBAAsB,EAAEA,sBAAuB;MAC/CE,sBAAsB,EAAEA,sBAAuB;MAC/CJ,YAAY,EAAEA,YAAY,IAAI,EAAG,CAAC;IAAA;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnC;EAAC,gBACF,CAAC;AAEP;AAAC3B,EAAA,CA5CQD,aAAa;AAAA6B,EAAA,GAAb7B,aAAa;AA8CtB,eAAeA,aAAa;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}